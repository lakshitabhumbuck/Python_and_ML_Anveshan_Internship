''''
#here we want to see the list of all keywords
import keyword

# keyword module is used to see all keyword in python version
print(keyword.kwlist)

#count the length of keyword list 
print(len(keyword.kwlist))



# take input from user , and take it in promt , and assign it to value variable
value = input("enter any value from keyword...")

print(value)

#if we want to check what type of value i am entering and what kind of value is comiler interpreting
print(type(value))        # oops concept ---> every type in python is an object of a class
# by default input function will only accept string values



#if u want to input other datatypes , use

#Typecasting -->  changing a datatype to another datatype
# methods -->  int(), str(), 

#converting to integer
value = int(input("enter any value from keyword..."))
print(value)
print(type(value))   

#converting to float
value = float(input("enter any value from keyword..."))
print(value)
print(type(value)) 





# HOW TO OUTPUT IN DIFFERENT WAYS 

#print( values--> values need to be printed,sep--> seperation btw values , by default space ,  end-->  how it will end , in nest line , next tab etc, screen--> where it will print in screen  . flush--> to clear values from screen , true -sustain , else false

print(6,7,8,9)    # sep= is space , end = next line by default

print(6,7,8,9, sep='%', end ='$$')





# HOW TO OPEN ANOTHER FILE AND WRITE IN IT 


# TWO MODES TO OPEN A FILE - 'r' for reading and 'w' for writing 
#samplefile here is a file object open for writing 

# python cant recognise backward slashes , thus use forward slashes

samplefile = open(r'C:\Users/Lakshita\Desktop\ML_INTERNSHIP\demo.txt', 'w')
print(6,7,8,9, sep='%', end ='$$', file=samplefile)



samplefile = open('C:/Users/Lakshita\Desktop/ML_INTERNSHIP/demo.txt', 'w')
print(6,7,8,9, sep='%', end ='$$', file=samplefile)



'''





'''

# OUTPUT FORMATTING USING FORMAT () FUNCTION 

# {} value in this , will be replaced by format
print("  {} my anme is lakshita ".format("good moring"))

str= input("enter txt")
print("  text i had wriiten is : {} ".format(str))





# HOW TO CONCATENATE 

# by using + overlaoding operator 
str1= "hi"
str2= "miya"
res= str1 + str2
print(res)


# cannot concatenate two diiferent datatype 
str= "hi"
num= 10
res= str + num
print(res)

# solution --> change the type of either of varibale 


str3= "hi"
num= 10
res2= str3 + str(num)
print(res2)





# NUMBER IN PYTHON 



num=10+5j
print(num)
print(type(num))



# binary base 2 for using binary number ---> prefix ob or OB
print(OB101)


#octal --> prefix 0o 0d 0O
print(0o156)

# hexadecimal--> prefix 0x or 0X
print(0xAFB)




# TYPE CASTING IS AUTOMATIC OR IMPLICIT

# at time we may need to force typecasting so it will br explicit

# Implicit--> automatic smaller data will be converted to a bigger datatye

print( 100 + 15.67)  # integer small data + flaot big dtata type 
# implivilty int will be converted to big dtat type 




 #Forced exlpicit typecatsting

 # conver bigger data into smaller one 

 num= int(15.77)
 print(num)       # --> gives 15

val= int(-89.99)
print(val)

item= complex("10+6j")
print(item)
print(type(item))


'''




'''


 # NUMBER BASED MODULES --> RANDOMAND MATH MODULE 

 # random module-- > genrate numbers randomly on the fly 

 import random

 print(random.randrange(20,50))    # generate numbers in this range 

 print(random.random())      # genarate any number in any range 


# pick one word from the list
# practical use : used in capcha 

 list = ["hi", "bye", "seeyou"]
 print(random.choice(list))

# to switch order --> application -  questions ina test, otp 
 random.shuffle(list)
 print(list)




# MATH MODULE 

# used in amthem,atical cals


# aliases 
impot math as mt

print(mt.factorial(5))
print(mt.pi)
print(mt.log(1000000))
print(mt.pow(2,3))

'''








# SEQUENCE DATA --> list, string and tuple

# List-> very flexible sequence of data as it allows all sorts of modifaucation 
# [] brackets create lists
# data in list can be of different data types
# dat starts from index position 0

# caharcterstics of lists -> ordered by position , mutable can be modified . repeated or duplicate 
# values are allowed 

list= [ 1,2.3, "hi", 12,44, True, 'go']
# 1-> at positin 0.....

# if we acces list from left to right , then index starts from 0
# otherwisre from from ;eft <---------right , index starts from -1 positon 

# access the first elemnt of list
print(list[0])

# print last elemnt 
print(list[-1])






# TUPLES 

# sequnce of data hvaing order or position of elemnts but is it immutable ie cant cahnge 
# ()--> parenthesis used to denote tuplis
# index sarts from 0 frim left to right anf from -1 from right to left
#it amy conatina any tyoes od afta 

tup= (1,2,3,"hii", 12.33, True, 'go')




# LIST MODIFICATION 
# try to nmodify last element of list from bye to byebye 

list= [ 1,2,3, "hi", 12,44, True, 'bye']
list[-1]= 'bybye'
print(list)



# TUPLE MODIFICATION 
# try to nmodify last element of list from go tto gonow

tup= (1,2,3,"hii", 12.33, True, 'go')
tup[-1]= 'gonow'
print(tup)             --> immutability 








# COLLECTION TYPE DATA THAT DO NOT HAVE ANY INDEX OR POSITION 

#SET
# DICTIONARY



#dDICTIONARY 



# create a dictionary
#braces barckets
# it is mutable 
#values are in form of key:value pairs
# each value is recognised by key 
# keys cant be reapeted , the values caan be same 

#application - where we need unique identification , or for mapping 

dict= { 'name': "ajay", "age": 20}
print(dict["age"])
print(dict.keys())
print(dict.values())
print(dict.items())
dict["age"]= 67
print(dict["age"])








#SET

# used with{}
# no duplicate elemnts are allowed 
# sets are unorderd --order can be changed in diffrent system 

set={1,2,2,3,3,5,5,5}
print(set)








